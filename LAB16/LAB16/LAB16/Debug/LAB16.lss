
LAB16.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000017c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000128  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000017c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001ac  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000878  00000000  00000000  00000224  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006e4  00000000  00000000  00000a9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000315  00000000  00000000  00001180  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  00001498  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003a6  00000000  00000000  000014ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000013e  00000000  00000000  00001892  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  000019d0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 81 00 	call	0x102	; 0x102 <main>
  78:	0c 94 92 00 	jmp	0x124	; 0x124 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <retang>:
	int w,i,m;    //w = 2*pi*f
	w = 2*PI*60;
	for(i = 0; i<=PI;i = i + 0.1){
	m = sin(w*i);
	m = m & 0b11111100;
	PORTD = m;
  80:	8c ef       	ldi	r24, 0xFC	; 252
  82:	8b b9       	out	0x0b, r24	; 11
  84:	8f ef       	ldi	r24, 0xFF	; 255
  86:	9c e7       	ldi	r25, 0x7C	; 124
  88:	01 97       	sbiw	r24, 0x01	; 1
  8a:	f1 f7       	brne	.-4      	; 0x88 <retang+0x8>
  8c:	00 c0       	rjmp	.+0      	; 0x8e <retang+0xe>
  8e:	00 00       	nop
  90:	1b b8       	out	0x0b, r1	; 11
  92:	8f ef       	ldi	r24, 0xFF	; 255
  94:	9c e7       	ldi	r25, 0x7C	; 124
  96:	01 97       	sbiw	r24, 0x01	; 1
  98:	f1 f7       	brne	.-4      	; 0x96 <retang+0x16>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <retang+0x1c>
  9c:	00 00       	nop
  9e:	08 95       	ret

000000a0 <triang>:
  a0:	82 e0       	ldi	r24, 0x02	; 2
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	61 e0       	ldi	r22, 0x01	; 1
  a6:	70 e0       	ldi	r23, 0x00	; 0
  a8:	4b b1       	in	r20, 0x0b	; 11
  aa:	9b 01       	movw	r18, r22
  ac:	08 2e       	mov	r0, r24
  ae:	02 c0       	rjmp	.+4      	; 0xb4 <triang+0x14>
  b0:	22 0f       	add	r18, r18
  b2:	33 1f       	adc	r19, r19
  b4:	0a 94       	dec	r0
  b6:	e2 f7       	brpl	.-8      	; 0xb0 <triang+0x10>
  b8:	24 2b       	or	r18, r20
  ba:	2b b9       	out	0x0b, r18	; 11
  bc:	ef e0       	ldi	r30, 0x0F	; 15
  be:	fe e0       	ldi	r31, 0x0E	; 14
  c0:	31 97       	sbiw	r30, 0x01	; 1
  c2:	f1 f7       	brne	.-4      	; 0xc0 <triang+0x20>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <triang+0x26>
  c6:	00 00       	nop
  c8:	01 96       	adiw	r24, 0x01	; 1
  ca:	88 30       	cpi	r24, 0x08	; 8
  cc:	91 05       	cpc	r25, r1
  ce:	61 f7       	brne	.-40     	; 0xa8 <triang+0x8>
  d0:	61 e0       	ldi	r22, 0x01	; 1
  d2:	70 e0       	ldi	r23, 0x00	; 0
  d4:	3b b1       	in	r19, 0x0b	; 11
  d6:	ab 01       	movw	r20, r22
  d8:	08 2e       	mov	r0, r24
  da:	02 c0       	rjmp	.+4      	; 0xe0 <triang+0x40>
  dc:	44 0f       	add	r20, r20
  de:	55 1f       	adc	r21, r21
  e0:	0a 94       	dec	r0
  e2:	e2 f7       	brpl	.-8      	; 0xdc <triang+0x3c>
  e4:	24 2f       	mov	r18, r20
  e6:	20 95       	com	r18
  e8:	23 23       	and	r18, r19
  ea:	2b b9       	out	0x0b, r18	; 11
  ec:	ef e0       	ldi	r30, 0x0F	; 15
  ee:	fe e0       	ldi	r31, 0x0E	; 14
  f0:	31 97       	sbiw	r30, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <triang+0x50>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <triang+0x56>
  f6:	00 00       	nop
  f8:	01 97       	sbiw	r24, 0x01	; 1
  fa:	82 30       	cpi	r24, 0x02	; 2
  fc:	91 05       	cpc	r25, r1
  fe:	51 f7       	brne	.-44     	; 0xd4 <triang+0x34>
 100:	08 95       	ret

00000102 <main>:
	}
}
int main(void)
{
	//Garantir ; T = 1/60 = 0,018s = 18ms
	DDRD = 0xFC;
 102:	8c ef       	ldi	r24, 0xFC	; 252
 104:	8a b9       	out	0x0a, r24	; 10
	DDRC = 0X00;
 106:	17 b8       	out	0x07, r1	; 7
	while(1){
		if(PINC == 0X01){
 108:	86 b1       	in	r24, 0x06	; 6
 10a:	81 30       	cpi	r24, 0x01	; 1
 10c:	19 f4       	brne	.+6      	; 0x114 <main+0x12>
		retang();
 10e:	0e 94 40 00 	call	0x80	; 0x80 <retang>
 112:	fa cf       	rjmp	.-12     	; 0x108 <main+0x6>
		}
		else if(PINC == 0X02){
 114:	86 b1       	in	r24, 0x06	; 6
 116:	82 30       	cpi	r24, 0x02	; 2
 118:	19 f4       	brne	.+6      	; 0x120 <main+0x1e>
		triang();
 11a:	0e 94 50 00 	call	0xa0	; 0xa0 <triang>
 11e:	f4 cf       	rjmp	.-24     	; 0x108 <main+0x6>
	int w,i,m;    //w = 2*pi*f
	w = 2*PI*60;
	for(i = 0; i<=PI;i = i + 0.1){
	m = sin(w*i);
	m = m & 0b11111100;
	PORTD = m;
 120:	1b b8       	out	0x0b, r1	; 11
 122:	fe cf       	rjmp	.-4      	; 0x120 <main+0x1e>

00000124 <_exit>:
 124:	f8 94       	cli

00000126 <__stop_program>:
 126:	ff cf       	rjmp	.-2      	; 0x126 <__stop_program>
